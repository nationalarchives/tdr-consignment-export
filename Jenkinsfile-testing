library("tdr-jenkinslib")

def versionTag = "v${env.BUILD_NUMBER}"
def repo = "tdr-consignment-export"

pipeline {
  agent {
    label "master"
  }

  stages {
    stage("Run git secrets") {
      steps {
        script {
          tdr.runGitSecrets(repo)
        }
      }
    }
    stage('Test') {
      agent {
        ecs {
          inheritFrom 'transfer-frontend'
        }
      }
      steps {
        script {
          tdr.reportStartOfBuildToGitHub(repo, env.GIT_COMMIT)
        }
        checkout scm
        sh 'sbt -no-colors test'
      }
    }
    stage('Post-build') {
      when {
        expression { env.BRANCH_NAME == "add-export-version"}
      }
      stages {
        stage("Release to github") {
          steps {
            build(
                  job: "ConsignmentExportRelease",
                  parameters: [
                    string(name: "STAGE", value: "intg")
                  ],
                  wait: true)
          }
        }
        stage("Push Docker image") {
          steps {
            script {
              tdr.buildAndPushImage("consignment-export", versionTag)
              tdr.postToDaTdrSlackChannel(colour: "good", message: "*Consignment Export* :whale: Pushed version ${versionTag} to AWS ECR")
            }
          }
        }
        stage("Deploy to ECR") {
          steps {
            build(
                  job: "Consignment Export Deploy",
                  parameters: [
                    string(name: "STAGE", value: "intg"),
                    string(name: "TO_DEPLOY", value: versionTag)
                  ],
                  wait: false)
          }
        }
      }
    }
  }
  post {
    failure {
      script {
        tdr.reportFailedBuildToGitHub(repo, env.GIT_COMMIT)
      }
    }
    success {
      script {
        tdr.reportSuccessfulBuildToGitHub(repo, env.GIT_COMMIT)
      }
    }
  }
}
