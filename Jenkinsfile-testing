library("tdr-jenkinslib")

def versionBumpBranch = "version-bump-${env.BUILD_NUMBER}"
def repo = "tdr-consignment-export"

pipeline {
  agent {
    label "master"
  }

  stages {
    stage('Post-build') {
      when {
        expression { env.BRANCH_NAME == "add-export-version"}
      }
      stages {
        stage("Build Docker image") {
          agent {
            ecs {
              inheritFrom "transfer-frontend"
            }
          }
          steps {
            script {
              sshagent(['github-jenkins']) {
                sh "git config --global user.email tna-digital-archiving-jenkins@nationalarchives.gov.uk"
                sh "git config --global user.name tna-digital-archiving-jenkins"
                sh "git checkout -b ${versionBumpBranch}"
                sh "git push -u origin ${versionBumpBranch}"
                sh "git remote -v"
                withCredentials([string(credentialsId: 'github-jenkins-api-key', variable: 'GITHUB_TOKEN')]) {
                  sh "git config --global user.email tna-digital-archiving-jenkins@nationalarchives.gov.uk"
                  sh "git config --global user.name tna-digital-archiving-jenkins"
                  sh "sbt -no-colors release 'with-defaults'"
                }
              }
            }

            stash includes: "Dockerfile", name: "Dockerfile"
            stash includes: "target/universal/tdr-consignment-export.tgz", name: "tdr-consignment-export"
          }
        }
        stage("Push Docker image") {
          steps {
            unstash "tdr-consignment-export"
            unstash "Dockerfile"
            script {
              def versionTag = sh(script: "git describe --tags --abbrev=0", returnStdout: true)
              tdr.buildAndPushImage("consignment-export", versionTag)
              tdr.postToDaTdrSlackChannel(colour: "good", message: "*Consignment Export* :whale: Pushed version ${versionTag} to AWS ECR and released to Github")
              tdr.createGitHubPullRequest(
                            pullRequestTitle: "Version Bump from build number ${config.buildNumber}",
                            buildUrl: env.BUILD_URL,
                            repo: "repo",
                            branchToMergeTo: "master",
                            branchToMerge: versionBumpBranch
                          )
            }
            build(
                  job: "Consignment Export Deploy",
                  parameters: [
                    string(name: "STAGE", value: "intg"),
                    string(name: "TO_DEPLOY", value: versionTag)
                  ],
                  wait: false)
          }
        }
      }
    }
  }
  post {
    failure {
      script {
        tdr.reportFailedBuildToGitHub(repo, env.GIT_COMMIT)
      }
    }
    success {
      script {
        tdr.reportSuccessfulBuildToGitHub(repo, env.GIT_COMMIT)
      }
    }
  }
}
