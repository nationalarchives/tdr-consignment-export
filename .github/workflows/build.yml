name: Tag and pre-deploy consignment export
on:
  workflow_dispatch:
  pull_request:
    types:
      - closed
permissions:
  id-token: write
  contents: write
env:
  BRANCH_NAME: version-bump-${{ github.run_id }}${{ github.run_attempt }}
jobs:
  pre-deploy:
    runs-on: ubuntu-latest
    if: ${{ github.base_ref == 'master' && github.event.pull_request.merged == true && !contains(github.event.pull_request.labels.*.name, 'Version bump') }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - uses: sbt/setup-sbt@f20dc1bc1f8be605c44ffbcec6f17f708a4af9d1
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@e89d40939c28e39f97cf32126055eeae86ba74ec
        with:
          git_user_signingkey: true
          git_commit_gpgsign: true
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
      - id: build
        run: |
          git config --global user.email 181243999+tna-da-bot@users.noreply.github.com
          git config --global user.name tna-da-bot
          git checkout -b $BRANCH_NAME
          git push -u origin $BRANCH_NAME
          sbt 'release with-defaults'
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_PAT }}
      - name: Configure AWS credentials from management account
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838
        with:
          role-to-assume: arn:aws:iam::${{ secrets.MANAGEMENT_ACCOUNT }}:role/TDRGithubActionsRoleMgmt
          aws-region: eu-west-2
          role-session-name: ExportPushImages
      - name: Login to ECR
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1
        with:
          registry: ${{ secrets.MANAGEMENT_ACCOUNT }}.dkr.ecr.eu-west-2.amazonaws.com
      - name: Download Wiz CLI
        run: |
          curl -o wizcli https://wizcli.app.wiz.io/wizcli
          chmod +x wizcli
      - name: Authenticate to Wiz API
        run: |
          ./wizcli auth --id ${{ secrets.WIZ_CLIENT_ID }} --secret ${{ secrets.WIZ_CLIENT_SECRET }}
      - name: Run wiz CLI IaC scan
        run: ./wizcli iac scan --path . --name tdr-consignment-export-${{github.run_number}} --project ${{ secrets.WIZ_PROJECT_TDR}}
      - name: Build image
        run: |
          gh release create --generate-notes ${{ steps.build.outputs.latest-tag}} bagit-export/target/universal/tdr-consignment-export.tgz export/target/universal/tdr-export.tgz
          gh pr create --fill --label 'Version bump'
          docker build --pull --no-cache -t ${{ secrets.MANAGEMENT_ACCOUNT }}.dkr.ecr.eu-west-2.amazonaws.com/consignment-export:${{ steps.build.outputs.latest-tag}} .
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_PAT }}
      - name: Wiz Docker Scan
        run: |
          ./wizcli docker scan --image ${{ secrets.MANAGEMENT_ACCOUNT }}.dkr.ecr.eu-west-2.amazonaws.com/consignment-export:${{ steps.build.outputs.latest-tag }} --project ${{ secrets.WIZ_PROJECT_TDR}}
      - name: Push image to ECR
        run: |
          docker push ${{ secrets.MANAGEMENT_ACCOUNT }}.dkr.ecr.eu-west-2.amazonaws.com/consignment-export:${{ steps.build.outputs.latest-tag}}
          gh workflow run deploy.yml -f environment=intg -f to-deploy=${{ steps.build.outputs.latest-tag}}
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_PAT }}
      - name: Wiz Docker Tag
        run: |
          ./wizcli docker tag --image ${{ secrets.MANAGEMENT_ACCOUNT }}.dkr.ecr.eu-west-2.amazonaws.com/consignment-export:${{ steps.build.outputs.latest-tag}}
      - name: Send success message
        uses: nationalarchives/tdr-github-actions/.github/actions/slack-send@main
        with:
          message: "*Consignment Export* :whale: Pushed version ${{ steps.build.outputs.latest-tag}} to AWS ECR"
          slack-url: ${{ secrets.SLACK_WEBHOOK }}
